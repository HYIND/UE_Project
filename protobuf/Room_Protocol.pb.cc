// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Room_Protocol.proto

#include "Room_Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Room_Protobuf {
PROTOBUF_CONSTEXPR RoomInfo_Response_User::RoomInfo_Response_User(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoomInfo_Response_UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomInfo_Response_UserDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomInfo_Response_UserDefaultTypeInternal() {}
  union {
    RoomInfo_Response_User _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomInfo_Response_UserDefaultTypeInternal _RoomInfo_Response_User_default_instance_;
PROTOBUF_CONSTEXPR RoomInfo_Response::RoomInfo_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.userinfo_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoomInfo_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomInfo_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomInfo_ResponseDefaultTypeInternal() {}
  union {
    RoomInfo_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomInfo_ResponseDefaultTypeInternal _RoomInfo_Response_default_instance_;
PROTOBUF_CONSTEXPR RoomMessage_Request::RoomMessage_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoomMessage_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomMessage_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomMessage_RequestDefaultTypeInternal() {}
  union {
    RoomMessage_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomMessage_RequestDefaultTypeInternal _RoomMessage_Request_default_instance_;
PROTOBUF_CONSTEXPR RoomMessage_Response::RoomMessage_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoomMessage_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomMessage_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomMessage_ResponseDefaultTypeInternal() {}
  union {
    RoomMessage_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomMessage_ResponseDefaultTypeInternal _RoomMessage_Response_default_instance_;
PROTOBUF_CONSTEXPR Start_Response::Start_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Start_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Start_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Start_ResponseDefaultTypeInternal() {}
  union {
    Start_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Start_ResponseDefaultTypeInternal _Start_Response_default_instance_;
}  // namespace Room_Protobuf
static ::_pb::Metadata file_level_metadata_Room_5fProtocol_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Room_5fProtocol_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Room_5fProtocol_2eproto = nullptr;

const uint32_t TableStruct_Room_5fProtocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::RoomInfo_Response_User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::RoomInfo_Response_User, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::RoomInfo_Response_User, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::RoomInfo_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::RoomInfo_Response, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::RoomMessage_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::RoomMessage_Request, _impl_.content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::RoomMessage_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::RoomMessage_Response, _impl_.content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::Start_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Room_Protobuf::Start_Response, _impl_.result_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Room_Protobuf::RoomInfo_Response_User)},
  { 8, -1, -1, sizeof(::Room_Protobuf::RoomInfo_Response)},
  { 15, -1, -1, sizeof(::Room_Protobuf::RoomMessage_Request)},
  { 22, -1, -1, sizeof(::Room_Protobuf::RoomMessage_Response)},
  { 29, -1, -1, sizeof(::Room_Protobuf::Start_Response)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Room_Protobuf::_RoomInfo_Response_User_default_instance_._instance,
  &::Room_Protobuf::_RoomInfo_Response_default_instance_._instance,
  &::Room_Protobuf::_RoomMessage_Request_default_instance_._instance,
  &::Room_Protobuf::_RoomMessage_Response_default_instance_._instance,
  &::Room_Protobuf::_Start_Response_default_instance_._instance,
};

const char descriptor_table_protodef_Room_5fProtocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023Room_Protocol.proto\022\rRoom_Protobuf\"r\n\021"
  "RoomInfo_Response\0227\n\010userinfo\030\001 \003(\0132%.Ro"
  "om_Protobuf.RoomInfo_Response.User\032$\n\004Us"
  "er\022\014\n\004name\030\001 \001(\t\022\016\n\006status\030\002 \001(\005\"&\n\023Room"
  "Message_Request\022\017\n\007content\030\001 \001(\t\"\'\n\024Room"
  "Message_Response\022\017\n\007content\030\002 \001(\t\" \n\016Sta"
  "rt_Response\022\016\n\006result\030\001 \001(\005b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Room_5fProtocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Room_5fProtocol_2eproto = {
    false, false, 275, descriptor_table_protodef_Room_5fProtocol_2eproto,
    "Room_Protocol.proto",
    &descriptor_table_Room_5fProtocol_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_Room_5fProtocol_2eproto::offsets,
    file_level_metadata_Room_5fProtocol_2eproto, file_level_enum_descriptors_Room_5fProtocol_2eproto,
    file_level_service_descriptors_Room_5fProtocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Room_5fProtocol_2eproto_getter() {
  return &descriptor_table_Room_5fProtocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Room_5fProtocol_2eproto(&descriptor_table_Room_5fProtocol_2eproto);
namespace Room_Protobuf {

// ===================================================================

class RoomInfo_Response_User::_Internal {
 public:
};

RoomInfo_Response_User::RoomInfo_Response_User(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Room_Protobuf.RoomInfo_Response.User)
}
RoomInfo_Response_User::RoomInfo_Response_User(const RoomInfo_Response_User& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomInfo_Response_User* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:Room_Protobuf.RoomInfo_Response.User)
}

inline void RoomInfo_Response_User::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RoomInfo_Response_User::~RoomInfo_Response_User() {
  // @@protoc_insertion_point(destructor:Room_Protobuf.RoomInfo_Response.User)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomInfo_Response_User::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void RoomInfo_Response_User::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomInfo_Response_User::Clear() {
// @@protoc_insertion_point(message_clear_start:Room_Protobuf.RoomInfo_Response.User)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomInfo_Response_User::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Room_Protobuf.RoomInfo_Response.User.name"));
        } else
          goto handle_unusual;
        continue;
      // int32 status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomInfo_Response_User::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Room_Protobuf.RoomInfo_Response.User)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Room_Protobuf.RoomInfo_Response.User.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int32 status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Room_Protobuf.RoomInfo_Response.User)
  return target;
}

size_t RoomInfo_Response_User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Room_Protobuf.RoomInfo_Response.User)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 status = 2;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomInfo_Response_User::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomInfo_Response_User::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomInfo_Response_User::GetClassData() const { return &_class_data_; }


void RoomInfo_Response_User::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomInfo_Response_User*>(&to_msg);
  auto& from = static_cast<const RoomInfo_Response_User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Room_Protobuf.RoomInfo_Response.User)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomInfo_Response_User::CopyFrom(const RoomInfo_Response_User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Room_Protobuf.RoomInfo_Response.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfo_Response_User::IsInitialized() const {
  return true;
}

void RoomInfo_Response_User::InternalSwap(RoomInfo_Response_User* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomInfo_Response_User::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Room_5fProtocol_2eproto_getter, &descriptor_table_Room_5fProtocol_2eproto_once,
      file_level_metadata_Room_5fProtocol_2eproto[0]);
}

// ===================================================================

class RoomInfo_Response::_Internal {
 public:
};

RoomInfo_Response::RoomInfo_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Room_Protobuf.RoomInfo_Response)
}
RoomInfo_Response::RoomInfo_Response(const RoomInfo_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomInfo_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.userinfo_){from._impl_.userinfo_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Room_Protobuf.RoomInfo_Response)
}

inline void RoomInfo_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.userinfo_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RoomInfo_Response::~RoomInfo_Response() {
  // @@protoc_insertion_point(destructor:Room_Protobuf.RoomInfo_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomInfo_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.userinfo_.~RepeatedPtrField();
}

void RoomInfo_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomInfo_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Room_Protobuf.RoomInfo_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userinfo_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomInfo_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Room_Protobuf.RoomInfo_Response.User userinfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_userinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomInfo_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Room_Protobuf.RoomInfo_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Room_Protobuf.RoomInfo_Response.User userinfo = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_userinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_userinfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Room_Protobuf.RoomInfo_Response)
  return target;
}

size_t RoomInfo_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Room_Protobuf.RoomInfo_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Room_Protobuf.RoomInfo_Response.User userinfo = 1;
  total_size += 1UL * this->_internal_userinfo_size();
  for (const auto& msg : this->_impl_.userinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomInfo_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomInfo_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomInfo_Response::GetClassData() const { return &_class_data_; }


void RoomInfo_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomInfo_Response*>(&to_msg);
  auto& from = static_cast<const RoomInfo_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Room_Protobuf.RoomInfo_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.userinfo_.MergeFrom(from._impl_.userinfo_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomInfo_Response::CopyFrom(const RoomInfo_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Room_Protobuf.RoomInfo_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfo_Response::IsInitialized() const {
  return true;
}

void RoomInfo_Response::InternalSwap(RoomInfo_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.userinfo_.InternalSwap(&other->_impl_.userinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomInfo_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Room_5fProtocol_2eproto_getter, &descriptor_table_Room_5fProtocol_2eproto_once,
      file_level_metadata_Room_5fProtocol_2eproto[1]);
}

// ===================================================================

class RoomMessage_Request::_Internal {
 public:
};

RoomMessage_Request::RoomMessage_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Room_Protobuf.RoomMessage_Request)
}
RoomMessage_Request::RoomMessage_Request(const RoomMessage_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomMessage_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Room_Protobuf.RoomMessage_Request)
}

inline void RoomMessage_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RoomMessage_Request::~RoomMessage_Request() {
  // @@protoc_insertion_point(destructor:Room_Protobuf.RoomMessage_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomMessage_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
}

void RoomMessage_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomMessage_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Room_Protobuf.RoomMessage_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomMessage_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string content = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Room_Protobuf.RoomMessage_Request.content"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomMessage_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Room_Protobuf.RoomMessage_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Room_Protobuf.RoomMessage_Request.content");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Room_Protobuf.RoomMessage_Request)
  return target;
}

size_t RoomMessage_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Room_Protobuf.RoomMessage_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomMessage_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomMessage_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomMessage_Request::GetClassData() const { return &_class_data_; }


void RoomMessage_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomMessage_Request*>(&to_msg);
  auto& from = static_cast<const RoomMessage_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Room_Protobuf.RoomMessage_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomMessage_Request::CopyFrom(const RoomMessage_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Room_Protobuf.RoomMessage_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomMessage_Request::IsInitialized() const {
  return true;
}

void RoomMessage_Request::InternalSwap(RoomMessage_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomMessage_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Room_5fProtocol_2eproto_getter, &descriptor_table_Room_5fProtocol_2eproto_once,
      file_level_metadata_Room_5fProtocol_2eproto[2]);
}

// ===================================================================

class RoomMessage_Response::_Internal {
 public:
};

RoomMessage_Response::RoomMessage_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Room_Protobuf.RoomMessage_Response)
}
RoomMessage_Response::RoomMessage_Response(const RoomMessage_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomMessage_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Room_Protobuf.RoomMessage_Response)
}

inline void RoomMessage_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RoomMessage_Response::~RoomMessage_Response() {
  // @@protoc_insertion_point(destructor:Room_Protobuf.RoomMessage_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomMessage_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
}

void RoomMessage_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomMessage_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Room_Protobuf.RoomMessage_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomMessage_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Room_Protobuf.RoomMessage_Response.content"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomMessage_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Room_Protobuf.RoomMessage_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 2;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Room_Protobuf.RoomMessage_Response.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Room_Protobuf.RoomMessage_Response)
  return target;
}

size_t RoomMessage_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Room_Protobuf.RoomMessage_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomMessage_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomMessage_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomMessage_Response::GetClassData() const { return &_class_data_; }


void RoomMessage_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomMessage_Response*>(&to_msg);
  auto& from = static_cast<const RoomMessage_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Room_Protobuf.RoomMessage_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomMessage_Response::CopyFrom(const RoomMessage_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Room_Protobuf.RoomMessage_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomMessage_Response::IsInitialized() const {
  return true;
}

void RoomMessage_Response::InternalSwap(RoomMessage_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomMessage_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Room_5fProtocol_2eproto_getter, &descriptor_table_Room_5fProtocol_2eproto_once,
      file_level_metadata_Room_5fProtocol_2eproto[3]);
}

// ===================================================================

class Start_Response::_Internal {
 public:
};

Start_Response::Start_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Room_Protobuf.Start_Response)
}
Start_Response::Start_Response(const Start_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Start_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:Room_Protobuf.Start_Response)
}

inline void Start_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Start_Response::~Start_Response() {
  // @@protoc_insertion_point(destructor:Room_Protobuf.Start_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Start_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Start_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Start_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Room_Protobuf.Start_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Start_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Start_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Room_Protobuf.Start_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Room_Protobuf.Start_Response)
  return target;
}

size_t Start_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Room_Protobuf.Start_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Start_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Start_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Start_Response::GetClassData() const { return &_class_data_; }


void Start_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Start_Response*>(&to_msg);
  auto& from = static_cast<const Start_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Room_Protobuf.Start_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Start_Response::CopyFrom(const Start_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Room_Protobuf.Start_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Start_Response::IsInitialized() const {
  return true;
}

void Start_Response::InternalSwap(Start_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Start_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Room_5fProtocol_2eproto_getter, &descriptor_table_Room_5fProtocol_2eproto_once,
      file_level_metadata_Room_5fProtocol_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Room_Protobuf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Room_Protobuf::RoomInfo_Response_User*
Arena::CreateMaybeMessage< ::Room_Protobuf::RoomInfo_Response_User >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Room_Protobuf::RoomInfo_Response_User >(arena);
}
template<> PROTOBUF_NOINLINE ::Room_Protobuf::RoomInfo_Response*
Arena::CreateMaybeMessage< ::Room_Protobuf::RoomInfo_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Room_Protobuf::RoomInfo_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::Room_Protobuf::RoomMessage_Request*
Arena::CreateMaybeMessage< ::Room_Protobuf::RoomMessage_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Room_Protobuf::RoomMessage_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::Room_Protobuf::RoomMessage_Response*
Arena::CreateMaybeMessage< ::Room_Protobuf::RoomMessage_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Room_Protobuf::RoomMessage_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::Room_Protobuf::Start_Response*
Arena::CreateMaybeMessage< ::Room_Protobuf::Start_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Room_Protobuf::Start_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
